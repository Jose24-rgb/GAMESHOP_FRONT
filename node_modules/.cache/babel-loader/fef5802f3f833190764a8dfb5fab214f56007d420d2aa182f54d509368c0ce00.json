{"ast":null,"code":"export const getCroppedImg = (imageSrc, crop, fileName) => {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.src = imageSrc;\n    image.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = crop.width;\n      canvas.height = crop.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(image, crop.x, crop.y, crop.width, crop.height, 0, 0, crop.width, crop.height);\n      canvas.toBlob(blob => {\n        if (!blob) return reject(new Error('Canvas toBlob failed'));\n        blob.name = fileName;\n        resolve(new File([blob], fileName, {\n          type: 'image/jpeg'\n        }));\n      }, 'image/jpeg');\n    };\n    image.onerror = reject;\n  });\n};","map":{"version":3,"names":["getCroppedImg","imageSrc","crop","fileName","Promise","resolve","reject","image","Image","src","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","x","y","toBlob","blob","Error","name","File","type","onerror"],"sources":["C:/Users/jose_/Desktop/Corso pc/Corso/Pratica/Progetto Finale/frontend/src/utils/cropImage.js"],"sourcesContent":["export const getCroppedImg = (imageSrc, crop, fileName) => {\r\n    return new Promise((resolve, reject) => {\r\n      const image = new Image();\r\n      image.src = imageSrc;\r\n      image.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n  \r\n        ctx.drawImage(\r\n          image,\r\n          crop.x,\r\n          crop.y,\r\n          crop.width,\r\n          crop.height,\r\n          0,\r\n          0,\r\n          crop.width,\r\n          crop.height\r\n        );\r\n  \r\n        canvas.toBlob((blob) => {\r\n          if (!blob) return reject(new Error('Canvas toBlob failed'));\r\n          blob.name = fileName;\r\n          resolve(new File([blob], fileName, { type: 'image/jpeg' }));\r\n        }, 'image/jpeg');\r\n      };\r\n      image.onerror = reject;\r\n    });\r\n  };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,KAAK;EACvD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;IACzBD,KAAK,CAACE,GAAG,GAAGR,QAAQ;IACpBM,KAAK,CAACG,MAAM,GAAG,MAAM;MACnB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,KAAK,GAAGZ,IAAI,CAACY,KAAK;MACzBH,MAAM,CAACI,MAAM,GAAGb,IAAI,CAACa,MAAM;MAC3B,MAAMC,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MAEnCD,GAAG,CAACE,SAAS,CACXX,KAAK,EACLL,IAAI,CAACiB,CAAC,EACNjB,IAAI,CAACkB,CAAC,EACNlB,IAAI,CAACY,KAAK,EACVZ,IAAI,CAACa,MAAM,EACX,CAAC,EACD,CAAC,EACDb,IAAI,CAACY,KAAK,EACVZ,IAAI,CAACa,MACP,CAAC;MAEDJ,MAAM,CAACU,MAAM,CAAEC,IAAI,IAAK;QACtB,IAAI,CAACA,IAAI,EAAE,OAAOhB,MAAM,CAAC,IAAIiB,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAC3DD,IAAI,CAACE,IAAI,GAAGrB,QAAQ;QACpBE,OAAO,CAAC,IAAIoB,IAAI,CAAC,CAACH,IAAI,CAAC,EAAEnB,QAAQ,EAAE;UAAEuB,IAAI,EAAE;QAAa,CAAC,CAAC,CAAC;MAC7D,CAAC,EAAE,YAAY,CAAC;IAClB,CAAC;IACDnB,KAAK,CAACoB,OAAO,GAAGrB,MAAM;EACxB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}