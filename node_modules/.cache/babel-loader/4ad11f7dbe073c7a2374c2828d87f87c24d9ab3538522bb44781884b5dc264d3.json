{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jose_\\\\Desktop\\\\Corso pc\\\\Corso\\\\Pratica\\\\Progetto Finale\\\\frontend\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport api from '../services/axios'; // usa l'istanza con interceptor\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const email = searchParams.get('email');\n  const token = searchParams.get('token');\n  useEffect(() => {\n    if (!email || !token) {\n      setMessage('Link non valido.');\n    }\n  }, [email, token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      await api.post('/auth/reset-password', {\n        email,\n        token,\n        newPassword\n      });\n      setMessage('Password aggiornata. Ora puoi fare il login.');\n      setTimeout(() => navigate('/login'), 2000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Errore durante il reset.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Imposta una nuova password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control my-2\",\n        placeholder: \"Nuova password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Reimposta password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"5OuQR4aCPWEy4yB8DGOu6key/Qo=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","useEffect","useSearchParams","useNavigate","api","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","navigate","newPassword","setNewPassword","message","setMessage","email","get","token","handleSubmit","e","preventDefault","post","setTimeout","err","_err$response","_err$response$data","response","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/jose_/Desktop/Corso pc/Corso/Pratica/Progetto Finale/frontend/src/pages/ResetPassword.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\nimport api from '../services/axios'; // usa l'istanza con interceptor\r\n\r\nfunction ResetPassword() {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const email = searchParams.get('email');\r\n  const token = searchParams.get('token');\r\n\r\n  useEffect(() => {\r\n    if (!email || !token) {\r\n      setMessage('Link non valido.');\r\n    }\r\n  }, [email, token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    try {\r\n      await api.post('/auth/reset-password', {\r\n        email,\r\n        token,\r\n        newPassword\r\n      });\r\n      setMessage('Password aggiornata. Ora puoi fare il login.');\r\n      setTimeout(() => navigate('/login'), 2000);\r\n    } catch (err) {\r\n      setMessage(err.response?.data?.error || 'Errore durante il reset.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Imposta una nuova password</h2>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Nuova password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button className=\"btn btn-primary\">Reimposta password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}