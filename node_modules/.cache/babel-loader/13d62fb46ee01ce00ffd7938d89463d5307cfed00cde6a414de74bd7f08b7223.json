{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jose_\\\\Desktop\\\\Corso pc\\\\Corso\\\\Pratica\\\\Progetto Finale\\\\frontend\\\\src\\\\components\\\\BootstrapDropdown.jsx\";\nimport { Dropdown } from 'react-bootstrap';\nimport './BootstrapDropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapDropdown = ({\n  name,\n  label = 'Seleziona',\n  options = [],\n  value,\n  onChange\n}) => {\n  const handleSelect = selectedValue => {\n    const fakeEvent = {\n      target: {\n        name,\n        value: selectedValue\n      }\n    };\n    onChange(fakeEvent);\n  };\n  const handleClear = e => {\n    e.preventDefault();\n    const fakeEvent = {\n      target: {\n        name,\n        value: ''\n      }\n    };\n    onChange(fakeEvent);\n  };\n  const shouldShowClear = value && value !== '' && value !== label;\n  const dropdownId = `dropdown-${name}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-relative select-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: name,\n      value: value,\n      onChange: onChange,\n      \"aria-hidden\": \"true\",\n      tabIndex: -1,\n      hidden: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: opt,\n        children: opt\n      }, opt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      onSelect: handleSelect,\n      className: \"w-100 dropdown-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        as: \"button\",\n        id: dropdownId,\n        type: \"button\",\n        className: \"custom-toggle dropdown-toggle\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-expanded\": !!value,\n        \"aria-label\": `${label} per ${name}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-text\",\n          children: value || label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-arrow\",\n          children: \"\\u25BE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        className: \"w-100\",\n        role: \"listbox\",\n        \"aria-labelledby\": dropdownId,\n        children: options.map(opt => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: opt,\n          role: \"option\",\n          \"aria-selected\": value === opt,\n          children: opt\n        }, opt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), shouldShowClear && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"clear-btn\",\n      onClick: handleClear,\n      title: \"Cancella selezione\",\n      \"aria-label\": \"Cancella selezione\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = BootstrapDropdown;\nexport default BootstrapDropdown;\nvar _c;\n$RefreshReg$(_c, \"BootstrapDropdown\");","map":{"version":3,"names":["Dropdown","jsxDEV","_jsxDEV","BootstrapDropdown","name","label","options","value","onChange","handleSelect","selectedValue","fakeEvent","target","handleClear","e","preventDefault","shouldShowClear","dropdownId","className","children","tabIndex","hidden","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","onSelect","Toggle","as","id","type","Menu","role","Item","eventKey","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/jose_/Desktop/Corso pc/Corso/Pratica/Progetto Finale/frontend/src/components/BootstrapDropdown.jsx"],"sourcesContent":["import { Dropdown } from 'react-bootstrap';\r\nimport './BootstrapDropdown.css';\r\n\r\nconst BootstrapDropdown = ({ name, label = 'Seleziona', options = [], value, onChange }) => {\r\n  const handleSelect = (selectedValue) => {\r\n    const fakeEvent = {\r\n      target: {\r\n        name,\r\n        value: selectedValue,\r\n      }\r\n    };\r\n    onChange(fakeEvent);\r\n  };\r\n\r\n  const handleClear = (e) => {\r\n    e.preventDefault();\r\n    const fakeEvent = {\r\n      target: {\r\n        name,\r\n        value: ''\r\n      }\r\n    };\r\n    onChange(fakeEvent);\r\n  };\r\n\r\n  const shouldShowClear = value && value !== '' && value !== label;\r\n  const dropdownId = `dropdown-${name}`;\r\n\r\n  return (\r\n    <div className=\"position-relative select-wrapper\">\r\n\r\n      <select\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        aria-hidden=\"true\"\r\n        tabIndex={-1}\r\n        hidden\r\n      >\r\n        <option value=\"\">{label}</option>\r\n        {options.map((opt) => (\r\n          <option key={opt} value={opt}>{opt}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <Dropdown onSelect={handleSelect} className=\"w-100 dropdown-wrapper\">\r\n        <Dropdown.Toggle\r\n          as=\"button\"\r\n          id={dropdownId}\r\n          type=\"button\"\r\n          className=\"custom-toggle dropdown-toggle\"\r\n          aria-haspopup=\"listbox\"\r\n          aria-expanded={!!value}\r\n          aria-label={`${label} per ${name}`}\r\n        >\r\n          <span className=\"toggle-text\">{value || label}</span>\r\n          <span className=\"toggle-arrow\">▾</span>\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu className=\"w-100\" role=\"listbox\" aria-labelledby={dropdownId}>\r\n          {options.map((opt) => (\r\n            <Dropdown.Item\r\n              key={opt}\r\n              eventKey={opt}\r\n              role=\"option\"\r\n              aria-selected={value === opt}\r\n            >\r\n              {opt}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n      {shouldShowClear && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"clear-btn\"\r\n          onClick={handleClear}\r\n          title=\"Cancella selezione\"\r\n          aria-label=\"Cancella selezione\"\r\n        >\r\n          ×\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BootstrapDropdown;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}